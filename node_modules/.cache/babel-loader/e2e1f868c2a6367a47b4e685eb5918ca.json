{"ast":null,"code":"// import React from 'react';\n// import uuid from 'uuid';\n// import Search from './components/TodoComponents/Search';\n// import DailyTab from './components/Timeframes/Daily/Tab';\n// import MonthlyTab from './components/Timeframes/Monthly/Tab';\n// import TodoForm from './components/TodoComponents/TodoForm';\n// class App extends React.Component {\n//   state = {\n//     // true = daily, false = monthly\n//     activeTab: true,\n//     dailyTodos: dailyTodos,\n//     monthlyTodos: monthlyTodos,\n//     title: '',\n//     id: '',\n//     complete: false,\n//     position: '',\n//     search: ''\n//   }\n//   search = () => {\n//     if(this.state.activeTab) {\n//       this.setState(prevState => {\n//         return {\n//           dailyTodos: this.state.dailyTodos.filter(a => a.title.split(\" \").includes(this.state.search)),\n//           search: ''\n//         }\n//       })\n//     } else {\n//       this.setState(prevState => {\n//         return {\n//           monthlyTodos: this.state.monthlyTodos.filter(a => a.title.split(\" \").includes(this.state.search)),\n//           search: ''\n//         }\n//       })\n//     }\n//   }\n//   changeActive = () => {\n//     this.setState({ activeTab: !this.state.activeTab })\n//   }\n//   addTodo = event => {\n//     event.preventDefault();\n//     let newTodo = {\n//       title: this.state.title,\n//       id: uuid.v4(),\n//       complete: false,\n//       position: this.activeTab ? this.state.dailyTodos.length : this.state.monthlyTodos.length\n//     }\n//     if(this.state.activeTab) {\n//       this.setState(prevState => { \n//         return {\n//           dailyTodos: [...prevState.dailyTodos, newTodo],\n//           title: '',\n//           id: '',\n//           complete: false,\n//           position: ''\n//         }\n//       })\n//     } else {\n//       this.setState(prevState => { \n//         return {\n//           monthlyTodos: [...prevState.monthlyTodos, newTodo],\n//           title: '',\n//           id: '',\n//           complete: false\n//         }\n//       })\n//     }\n//   }\n//   clear = () => {\n//     if(this.state.activeTab) {\n//       this.setState({ dailyTodos: [...dailyTodos.filter(a => {\n//         if(!a.complete) {\n//           return a;\n//         }\n//       })] })\n//     } else {\n//       this.setState({ monthlyTodos: [...monthlyTodos.filter(a => {\n//         if(!a.complete) {\n//           return a;\n//         }\n//       })] })\n//     }\n//   }\n//   markComplete = id => {\n//     if(this.state.activeTab) {\n//       this.setState({ dailyTodos: this.state.dailyTodos = this.state.dailyTodos.map(a => {\n//         if(a.id == id) {\n//           a.complete = !a.complete;\n//           return a;\n//         }\n//         return a;\n//       }) })\n//     } else {\n//       this.setState({ monthlyTodos: this.state.monthlyTodos.map(a => {\n//         if(a.id == id) {\n//           a.complete = !a.complete;\n//         }\n//         return a;\n//       }) })\n//     }\n//   }\n//   handleChange = event => {\n//     this.setState({ [event.target.name]: event.target.value })\n//   }\n//   render() {\n//     return (\n//       <div style = { container }>\n//         <h1 style = { h1 }>{ `What I'm doing ${this.state.activeTab ? 'today' : 'this month'}` }</h1>\n//         {/* <Search \n//           handleChange = { this.handleChange }\n//           search = { this.search }\n//           searchVal = { this.state.search }\n//         /> */}\n//         <div style = { tabContainer }>\n//           <DailyTab \n//             activeTab = {this.state.activeTab}\n//             changeActive = { this.changeActive }\n//             todos = { this.state.dailyTodos }\n//             markComplete = { this.markComplete }\n//           />\n//           <MonthlyTab \n//             activeTab = {this.state.activeTab}\n//             changeActive = { this.changeActive }\n//             todos = { this.state.monthlyTodos }\n//             markComplete = { this.markComplete }\n//           />\n//         </div>\n//         <TodoForm \n//           activeTab = { this.state.activeTab }\n//           addTodo = { this.addTodo }\n//           handleChange = { this.handleChange }\n//           title = { this.state.title }\n//           clear = { this.clear }\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const dailyTodos = [\n//   {\n//     title: 'Research animation libraries',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 1\n//   },\n//   {\n//     title: 'Continue brainstorming ideas to improve this site',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 2\n//   },\n//   {\n//     title: `Study for this week's lessons`,\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 3\n//   }\n// ]\n// const monthlyTodos = [\n//   {\n//     title: 'Use iframes to better display Projects content',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 1\n//   },\n//   {\n//     title: 'Refactor my Texas Holdem game with React',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 2\n//   },\n//   {\n//     title: 'Apply for Jobs',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 3\n//   },\n//   {\n//     title: 'Give this website a responsive design',\n//     id: uuid.v4(),\n//     complete: true,\n//     position: 4\n//   },\n// ]\n// const container = {\n//   height: '100%',\n//   width: '100%',\n//   border: '1px solid #e9e9e9',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   justifyContent: 'space-between',\n//   padding: '0',\n//   background: '#181712',\n//   color: 'white',\n//   position: 'relative'\n// }\n// const h1 = {\n//   fontSize: '0.8rem',\n//   textAlign: 'center',\n//   margin: '3% 0 5% 0',\n//   fontStyle: 'italic'\n// }\n// const tabContainer = {\n//   height: '80%',\n//   position: 'relative',\n//   overflow: 'scroll',\n//   overflowX: 'hidden'\n// }\n// export default App;","map":{"version":3,"sources":["/Users/lambda_school_loaner_69/Desktop/Personal Projects/portfolio items/portfolio/portfolio-v2/src/components/ReactProjects/Todo/App.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import uuid from 'uuid';\n\n// import Search from './components/TodoComponents/Search';\n// import DailyTab from './components/Timeframes/Daily/Tab';\n// import MonthlyTab from './components/Timeframes/Monthly/Tab';\n\n// import TodoForm from './components/TodoComponents/TodoForm';\n\n// class App extends React.Component {\n//   state = {\n//     // true = daily, false = monthly\n//     activeTab: true,\n//     dailyTodos: dailyTodos,\n//     monthlyTodos: monthlyTodos,\n//     title: '',\n//     id: '',\n//     complete: false,\n//     position: '',\n//     search: ''\n//   }\n\n//   search = () => {\n//     if(this.state.activeTab) {\n//       this.setState(prevState => {\n//         return {\n//           dailyTodos: this.state.dailyTodos.filter(a => a.title.split(\" \").includes(this.state.search)),\n//           search: ''\n//         }\n//       })\n//     } else {\n//       this.setState(prevState => {\n//         return {\n//           monthlyTodos: this.state.monthlyTodos.filter(a => a.title.split(\" \").includes(this.state.search)),\n//           search: ''\n//         }\n//       })\n//     }\n//   }\n\n//   changeActive = () => {\n//     this.setState({ activeTab: !this.state.activeTab })\n//   }\n\n//   addTodo = event => {\n//     event.preventDefault();\n//     let newTodo = {\n//       title: this.state.title,\n//       id: uuid.v4(),\n//       complete: false,\n//       position: this.activeTab ? this.state.dailyTodos.length : this.state.monthlyTodos.length\n//     }\n//     if(this.state.activeTab) {\n//       this.setState(prevState => { \n//         return {\n//           dailyTodos: [...prevState.dailyTodos, newTodo],\n//           title: '',\n//           id: '',\n//           complete: false,\n//           position: ''\n//         }\n//       })\n//     } else {\n//       this.setState(prevState => { \n//         return {\n//           monthlyTodos: [...prevState.monthlyTodos, newTodo],\n//           title: '',\n//           id: '',\n//           complete: false\n//         }\n//       })\n//     }\n//   }\n\n//   clear = () => {\n//     if(this.state.activeTab) {\n//       this.setState({ dailyTodos: [...dailyTodos.filter(a => {\n//         if(!a.complete) {\n//           return a;\n//         }\n//       })] })\n//     } else {\n//       this.setState({ monthlyTodos: [...monthlyTodos.filter(a => {\n//         if(!a.complete) {\n//           return a;\n//         }\n//       })] })\n//     }\n//   }\n\n//   markComplete = id => {\n//     if(this.state.activeTab) {\n//       this.setState({ dailyTodos: this.state.dailyTodos = this.state.dailyTodos.map(a => {\n//         if(a.id == id) {\n//           a.complete = !a.complete;\n//           return a;\n//         }\n//         return a;\n//       }) })\n//     } else {\n//       this.setState({ monthlyTodos: this.state.monthlyTodos.map(a => {\n//         if(a.id == id) {\n//           a.complete = !a.complete;\n//         }\n//         return a;\n//       }) })\n//     }\n//   }\n\n//   handleChange = event => {\n//     this.setState({ [event.target.name]: event.target.value })\n//   }\n\n//   render() {\n//     return (\n//       <div style = { container }>\n//         <h1 style = { h1 }>{ `What I'm doing ${this.state.activeTab ? 'today' : 'this month'}` }</h1>\n//         {/* <Search \n//           handleChange = { this.handleChange }\n//           search = { this.search }\n//           searchVal = { this.state.search }\n//         /> */}\n//         <div style = { tabContainer }>\n//           <DailyTab \n//             activeTab = {this.state.activeTab}\n//             changeActive = { this.changeActive }\n//             todos = { this.state.dailyTodos }\n//             markComplete = { this.markComplete }\n//           />\n//           <MonthlyTab \n//             activeTab = {this.state.activeTab}\n//             changeActive = { this.changeActive }\n//             todos = { this.state.monthlyTodos }\n//             markComplete = { this.markComplete }\n//           />\n//         </div>\n//         <TodoForm \n//           activeTab = { this.state.activeTab }\n//           addTodo = { this.addTodo }\n//           handleChange = { this.handleChange }\n//           title = { this.state.title }\n//           clear = { this.clear }\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const dailyTodos = [\n//   {\n//     title: 'Research animation libraries',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 1\n//   },\n//   {\n//     title: 'Continue brainstorming ideas to improve this site',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 2\n//   },\n//   {\n//     title: `Study for this week's lessons`,\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 3\n//   }\n// ]\n\n// const monthlyTodos = [\n//   {\n//     title: 'Use iframes to better display Projects content',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 1\n//   },\n//   {\n//     title: 'Refactor my Texas Holdem game with React',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 2\n//   },\n//   {\n//     title: 'Apply for Jobs',\n//     id: uuid.v4(),\n//     complete: false,\n//     position: 3\n//   },\n//   {\n//     title: 'Give this website a responsive design',\n//     id: uuid.v4(),\n//     complete: true,\n//     position: 4\n//   },\n// ]\n\n// const container = {\n//   height: '100%',\n//   width: '100%',\n//   border: '1px solid #e9e9e9',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   justifyContent: 'space-between',\n//   padding: '0',\n//   background: '#181712',\n//   color: 'white',\n//   position: 'relative'\n// }\n\n// const h1 = {\n//   fontSize: '0.8rem',\n//   textAlign: 'center',\n//   margin: '3% 0 5% 0',\n//   fontStyle: 'italic'\n// }\n\n// const tabContainer = {\n//   height: '80%',\n//   position: 'relative',\n//   overflow: 'scroll',\n//   overflowX: 'hidden'\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}