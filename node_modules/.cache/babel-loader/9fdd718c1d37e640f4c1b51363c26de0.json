{"ast":null,"code":"// import React, { Component } from 'react';\n// // import MediaQuery from 'react-responsive';\n// export default class Pomodoro extends Component {\n//   state = {\n//     restMin: 5,\n//     workMin: 20,\n//     seconds: 0,\n//     break: false,\n//     open: false,\n//     start: false\n//   }\n//   timer = () => {\n//     this.setState({ seconds: this.state.seconds == 0 ? 59 : this.state.seconds - 1 });\n//     if(this.state.break) {\n//       this.setState({ restMin: this.state.seconds == 0 ? this.state.restMin - 1 : this.state.restMin == 5 ? 4 : this.state.restMin })\n//       if(this.state.restMin == -1) {\n//         this.setState({ restMin: 5, break: false })\n//       }\n//     } else {\n//       this.setState({ workMin: this.state.seconds == 0 ? this.state.workMin - 1 : this.state.workMin == 20 ? 19 : this.state.workMin })\n//       if(this.state.workMin == -1) {\n//         this.setState({ workMin: 20, break: true })\n//       }\n//     }\n//   }\n//   startPomedoro = () => {\n//     this.setState({ interval: setInterval(this.timer, 1000), start: !this.state.start })\n//   }\n//   render() {\n//     return (\n//       <>\n//       <MediaQuery minWidth = {601}>\n//       <div style = {{\n//         width: '225px'\n//       }}>\n//         <div style = {{\n//           fontSize: '2rem',\n//           textAlign: 'center'\n//         }}>\n//           <span style = {{ textAlign: 'center', cursor: 'pointer' }} onClick = { () => this.startPomedoro() }>{ this.state.start ? this.state.rest ? 'Rest: ' : 'Work: ' : 'Start: ' }</span>\n//           { this.state.break ? this.state.restMin : this.state.workMin } : { this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds }\n//         </div>\n//         <div style = {{\n//           fontSize: '0.8rem',\n//           fontStyle: 'italic',\n//           marginTop: '10px'\n//         }}>\n//           a collaborative effort with &nbsp;\n//           <a \n//             href=\"https://github.com/csinozich\"\n//             style = {{\n//               color: 'white'\n//             }}\n//           >\n//             Claire Sinozich\n//           </a>\n//         </div>\n//       </div>\n//       </MediaQuery>\n//       <MediaQuery maxWidth = { 600 }>\n//       <div style = {{\n//         width: '100px',\n//       }}>\n//         <div style = {{\n//           fontSize: '1.5rem',\n//           textAlign: 'center'\n//         }}>\n//           <span style = {{ textAlign: 'center', cursor: 'pointer', fontSize: '1.2rem' }} onClick = { () => this.startPomedoro() }>{ this.state.start ? this.state.rest ? 'Rest: ' : 'Work: ' : 'Start: ' }</span><br />\n//           { this.state.break ? this.state.restMin : this.state.workMin } : { this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds }\n//         </div>\n//       </div>\n//       </MediaQuery>\n//       </>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/lambda_school_loaner_69/Desktop/Personal Projects/portfolio items/portfolio/portfolio-v2/src/components/ReactProjects/Pomodoro/Pomodoro.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// // import MediaQuery from 'react-responsive';\n\n// export default class Pomodoro extends Component {\n//   state = {\n//     restMin: 5,\n//     workMin: 20,\n//     seconds: 0,\n//     break: false,\n//     open: false,\n//     start: false\n//   }\n\n//   timer = () => {\n//     this.setState({ seconds: this.state.seconds == 0 ? 59 : this.state.seconds - 1 });\n\n//     if(this.state.break) {\n//       this.setState({ restMin: this.state.seconds == 0 ? this.state.restMin - 1 : this.state.restMin == 5 ? 4 : this.state.restMin })\n      \n//       if(this.state.restMin == -1) {\n//         this.setState({ restMin: 5, break: false })\n//       }\n\n//     } else {\n//       this.setState({ workMin: this.state.seconds == 0 ? this.state.workMin - 1 : this.state.workMin == 20 ? 19 : this.state.workMin })\n\n//       if(this.state.workMin == -1) {\n//         this.setState({ workMin: 20, break: true })\n//       }\n//     }\n//   }\n \n//   startPomedoro = () => {\n//     this.setState({ interval: setInterval(this.timer, 1000), start: !this.state.start })\n//   }\n\n//   render() {\n//     return (\n//       <>\n//       <MediaQuery minWidth = {601}>\n//       <div style = {{\n//         width: '225px'\n//       }}>\n//         <div style = {{\n//           fontSize: '2rem',\n//           textAlign: 'center'\n//         }}>\n//           <span style = {{ textAlign: 'center', cursor: 'pointer' }} onClick = { () => this.startPomedoro() }>{ this.state.start ? this.state.rest ? 'Rest: ' : 'Work: ' : 'Start: ' }</span>\n//           { this.state.break ? this.state.restMin : this.state.workMin } : { this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds }\n//         </div>\n//         <div style = {{\n//           fontSize: '0.8rem',\n//           fontStyle: 'italic',\n//           marginTop: '10px'\n//         }}>\n//           a collaborative effort with &nbsp;\n//           <a \n//             href=\"https://github.com/csinozich\"\n//             style = {{\n//               color: 'white'\n//             }}\n//           >\n//             Claire Sinozich\n//           </a>\n//         </div>\n//       </div>\n//       </MediaQuery>\n//       <MediaQuery maxWidth = { 600 }>\n//       <div style = {{\n//         width: '100px',\n//       }}>\n//         <div style = {{\n//           fontSize: '1.5rem',\n//           textAlign: 'center'\n//         }}>\n//           <span style = {{ textAlign: 'center', cursor: 'pointer', fontSize: '1.2rem' }} onClick = { () => this.startPomedoro() }>{ this.state.start ? this.state.rest ? 'Rest: ' : 'Work: ' : 'Start: ' }</span><br />\n//           { this.state.break ? this.state.restMin : this.state.workMin } : { this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds }\n//         </div>\n//       </div>\n//       </MediaQuery>\n//       </>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}